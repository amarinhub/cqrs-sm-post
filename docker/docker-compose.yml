# Start the container(s) using the following command:
# 	docker-compose up -d
# Stop the container(s) using the following command:
# 	docker-compose down
# Delete all containers using the following command:
# 	docker rm -f $(docker ps -a -q)
# Delete all volumes using the following command:
# 	docker volume rm $(docker volume ls -q)
# Delete all images list
#   docker rmi $(docker images -a -q)
version: "3.4"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - "volume_data:/zookeeper"

  broker:
    image: confluentinc/cp-kafka:6.2.0
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - "volume_data:/broker"

  # MongoDb container
  mongodb:
    image: mongo:latest
    container_name: mongodb
    # extra
    networks:
      - default
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    restart: always
    volumes:
      - volume_data:/mongodb

  # Kafdrop view 
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "broker:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - broker
    volumes:
      - volume_data:/kafdrop

  sql-server-db:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:latest
    ports:
      - "5434:1433"
    environment:
      SA_PASSWORD: "@Pa$$w0rdSecur3"
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
    volumes:
      - volume_data:/mssql
      

volumes:
  volume_data:
    driver: local