version: "3.4"
# Run command `docker-compose up -d`
services:
  # Zookeeper container
  zookeeper:
    image: bitnami/zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
 
  # Kafka container
  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      # - ALLOW_PLAINTEXT_LISTENER=yes
      # - KAFKA_LISTENERS=PLAINTEXT://:9092
      # - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ZOOKEEPER_SESSION_TIMEOUT=6000
      - KAFKA_RESTART_ATTEMPTS=10
      - KAFKA_RESTART_DELAY=5
      - ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL=0
    depends_on:
      - zookeeper
    #command:
    #  - bash -c "kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic SocialMediaPostEvents"
    # Create topic on docker container `kafka`
    # "docker-compose exec kafka /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic SocialMediaPostEvents"
  # http://localhost:9000
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    restart: always
    ports:
      - "9000:9000"
    environment:
        KAFKA_BROKERCONNECT: "kafka:9092"
        JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

  # MongoDb container
  mongodb:
    image: mongo:latest
    # extra
    networks:
      - default
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    restart: always
    volumes:
      - mongodb_data:/data/db

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongodb_data:
   
networks:
  default:
    external: true
    name: mydockernetwork
